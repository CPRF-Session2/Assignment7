Amanda Cuevas
1) For ++*p, p is incremented and the new value is returned. For *p++, the old value is returned and then p is incremented. With *++p, p is incremented, then moves up an address, and then returns the old value.
2) NULL pointers are pointers that lead to no address, or point nowhere. One example of a null pointer is int *ptr = NULL;. Other variable representations of NULL pointers include "float *ptr  = (float *)0;" , "char  *ptr  = (char *)0;" ,  "double *ptr = (double *)0;" ,  "char *ptr   = '\0';".
3) Some use cases for NULL pointers is to ensure that there is no garbage data within the pointer before using it for functions such as malloc. That way, it is safer to have the pointer point to nowhere rather than anywhere, where it could possibly pick up the aforementioned garbage data along the way.
4) Yes, you can add or subtract pointers. A case for doing so would be when working with arrays. If you have array[15], and *ptr points to array[10], doing ptr+1 would set it to the address of array[11]. Furthermore, if *ptr was set to array[6], then doing ptr = ptr - ptr2 would point to array[5].
5) The difference between the following declarations are that the first declaration creates an array of eight int  pointers, the second one points to the array of 8 integers, and the third also creates an array of eight int pointers like the first declaration.
